""" Задача 2. Семинар

На одном семинаре по теории множеств нужно показать наглядный пример, как эти множества работают. 
Для начала было сгенерировано два набора чисел: 

nums_1 = [29, 17, 10, 15, 13, 22, 12, 22, 7, 24, 26, 3, 11, 2, 3, 16, 19, 21, 2, 3, 8, 27, 2, 17, 
2, 20, 12, 21, 3, 1]
nums_2 = [16, 21, 30, 24, 5, 7, 23, 13, 11, 5, 21, 5, 19, 9, 12, 9, 15, 16, 29, 8, 16, 1, 22, 15, 
16, 9, 1, 13, 21, 21]


Вас попросили написать программу, которая будет наглядно демонстрировать работу со множествами с 
помощью этих чисел.

Напишите программу, которая преобразует списки во множества и убирает повторяющиеся элементы. 
Затем удаляет минимальный элемент из каждого множества и добавляет туда случайное число в 
диапазоне от 100 до 200. Затем выполните следующие действия со множествами: 
    Вывести все элементы множеств (объединение). 
    Вывести только общие элементы (пересечение).
    Вывести элементы, входящие в nums_2, но не входящие в nums_1. """

nums_1 = [29, 17, 10, 15, 13, 22, 12, 22, 7, 24, 26, 3, 11, 2, 3, 16, 19, 21, 2, 3, 8, 27, 2, 17, 2,
          20, 12, 21, 3, 1]
nums_2 = [16, 21, 30, 24, 5, 7, 23, 13, 11, 5, 21, 5, 19, 9, 12, 9, 15, 16, 29, 8, 16, 1, 22, 15,
          16, 9, 1, 13, 21, 21]

nums_set_1 = set(nums_1)
nums_set_2 = set(nums_2)
print(f'1-е множество: {nums_set_1}')
print(f'2-е множество: {nums_set_2}')
minimum_1 = min(nums_set_1)
minimum_2 = min(nums_set_2)
nums_set_1.remove(min(nums_set_1))
nums_set_2.remove(min(nums_set_2))
print(f'Минимальный элемент 1-го множества: {minimum_1}')
print(f'Минимальный элемент 2-го множества: {minimum_2}')
rand_1 = random.randint(100, 200)
rand_2 = random.randint(100, 200)
nums_set_1.add(rand_1)
nums_set_2.add(rand_2)
print(f'Случайное число для 1-го множества: {rand_1}')
print(f'Случайное число для 2-го множества: {rand_2}')
first = nums_set_1.union(nums_2)
print(f'Объединение множеств: {first}')
second = nums_set_1.intersection(nums_2)
print(f'Пересечение множеств: {second}')
third = nums_set_2.difference(nums_set_1)
print(f'Элементы, входящие в nums_2, но не входящие в nums_1: {third}')

